AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Env:
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - QAT
      - PRD
    Description: Enter Environment Name.

Resources:
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub route-opt-jenkins-${Env}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com
                - glue.amazonaws.com
                - states.amazonaws.com
                - sqs.amazonaws.com
                - sns.amazonaws.com
                - events.amazonaws.com
                - cloudformation.amazonaws.com
                - apigateway.amazonaws.com
                - ssm.amazonaws.com
                - emr-serverless.amazonaws.com
            Action: sts:AssumeRole

  # CloudWatch Log Policy
  IAMRolePolicyCloudWatchLogPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CloudWatchLog-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: logs:*
            Resource: '*'

  # Event Policy
  IAMRolePolicyEventPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: event-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - events:DescribeRule
              - events:Put*
              - events:List*
              - events:Create*
            Resource: !Sub arn:aws:events:us-east-1:${AWS::AccountId}:rule/*

  # IAM PassRole Policy
  IAMRolePolicyIamPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: iam-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: iam:PassRole
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*

  # Lambda Source Mapping Policy
  IAMRolePolicyLambdaSourcePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: Lambda-source-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: lambda:CreateEventSourceMapping
            Resource: '*'

  # SNS Policy
  IAMRolePolicySnsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SNS-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sns:*
            Resource: !Sub arn:aws:sns:us-east-1:${AWS::AccountId}:*

  # Amazon Kinesis Policy
  IAMRolePolicyAmazonKinesisPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AmazonKinesisFullAccess
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: kinesis:*
            Resource: '*'

  # EMR Policy
  IAMRolePolicyEMRPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EMR
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: emr-serverless:*
            Resource: '*'

  # S3 Policy
  IAMRolePolicyS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 
              - s3:List*
              - s3:Get*
              - s3:Put*
            Resource: arn:aws:s3:::route-opt*

  # Step Functions Policy
  IAMRolePolicyStepFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: step-function-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: states:*
            Resource: !Sub arn:aws:states:us-east-1:${AWS::AccountId}:stateMachine:*

  # SSM Policy
  IAMRolePolicySSMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ssm-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 
              - ssm:GetParameters
              - ssm:PutParameter
              - ssm:DeleteParameter
            Resource: '*'

  # CloudFormation Policy
  IAMRolePolicyCloudFormationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cloudformation-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: cloudformation:*
            Resource: '*'

  # EC2 Policy
  IAMRolePolicyEC2Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ec2-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 
              - ec2:Describe*
              - ec2:StartInstances
              - ec2:StopInstances
            Resource: '*'

  # SQS Policy
  IAMRolePolicySqsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: sqs-policy
      Roles: [!Ref IAMRole]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sqs:*
            Resource: !Sub arn:aws:sqs:us-east-1:${AWS::AccountId}:*
